{"ast":null,"code":"var _jsxFileName = \"/Users/joshuachai/Documents/GitHub/pitch-class-set-analyzer/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Piano, MidiNumbers } from 'react-piano';\nimport 'react-piano/dist/styles.css';\nimport Analyzer from './Analyzer';\nimport SetList from './SetList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst noteRange = {\n  first: MidiNumbers.fromNote('c3'),\n  last: MidiNumbers.fromNote('b3')\n}; // Using a single octave to designate pitch class...\n\nconst numberToNote = {\n  48: 'C',\n  49: 'C#',\n  50: 'D',\n  51: 'D#',\n  52: 'E',\n  53: 'F',\n  54: 'F#',\n  55: 'G',\n  56: 'G#',\n  57: 'A',\n  58: 'A#',\n  59: 'B'\n};\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.playNote = midiNumber => {\n      // This is a set of pitch classes... we allow\n      // each note only one time maximum.\n      if (!this.state.listMidi.includes(midiNumber)) {\n        this.setState({\n          listMidi: [...this.state.listMidi, midiNumber]\n        });\n        this.setState({\n          listNames: [...this.state.listNames, numberToNote[midiNumber]]\n        });\n      }\n\n      console.log(numberToNote[midiNumber]);\n      this.setState({\n        updated: true\n      });\n      console.log(this.state.list);\n      return null;\n    };\n\n    this.stopNote = midiNumber => {\n      return null;\n    };\n\n    this.onClearNotes = () => {\n      this.setState({\n        listNames: [],\n        listMidi: []\n      });\n    };\n\n    this.state = {\n      listMidi: [],\n      listNames: [],\n      updated: false\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"ui divider\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"ui container\",\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Set Analyzer, v0.5\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 42\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 47\n        }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n          children: [\"Input a pitch-class set using the keyboard below.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 69\n          }, this), \"Once finished, click the \\\"Compute set characteristics\\\" button!\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"ui divider\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Analyzer, {\n        noteNamesOn: this.state.listNames,\n        noteNumbersOn: this.state.listMidi\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"ui divider\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"ui container\",\n        children: [/*#__PURE__*/_jsxDEV(SetList, {\n          noteNamesOn: this.state.listNames\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Piano, {\n          noteRange: noteRange,\n          width: 660,\n          playNote: this.playNote,\n          stopNote: this.stopNote\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: this.onClearNotes,\n          children: \"Clear notes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"ui divider\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nReactDOM.render( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 97,\n  columnNumber: 5\n}, this), document.querySelector('#root'));","map":{"version":3,"sources":["/Users/joshuachai/Documents/GitHub/pitch-class-set-analyzer/src/index.js"],"names":["React","ReactDOM","Piano","MidiNumbers","Analyzer","SetList","noteRange","first","fromNote","last","numberToNote","App","Component","constructor","props","playNote","midiNumber","state","listMidi","includes","setState","listNames","console","log","updated","list","stopNote","onClearNotes","render","document","querySelector"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Piano, MidiNumbers } from 'react-piano';\nimport 'react-piano/dist/styles.css';\nimport Analyzer from './Analyzer';\nimport SetList from './SetList';\n\nconst noteRange = {\n    first: MidiNumbers.fromNote('c3'),\n    last: MidiNumbers.fromNote('b3')\n  };\n\n// Using a single octave to designate pitch class...\nconst numberToNote = {\n    48: 'C',\n    49: 'C#',\n    50: 'D',\n    51: 'D#',\n    52: 'E',\n    53: 'F',\n    54: 'F#',\n    55: 'G',\n    56: 'G#', \n    57: 'A',\n    58: 'A#',\n    59: 'B'\n}\n\nclass App extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = { listMidi: [], listNames: [], updated: false };\n    }\n\n    playNote = (midiNumber) => {\n        // This is a set of pitch classes... we allow\n        // each note only one time maximum.\n        if(!this.state.listMidi.includes(midiNumber)){\n            this.setState({ listMidi: [...this.state.listMidi, midiNumber]});\n            this.setState({ listNames: [...this.state.listNames, numberToNote[midiNumber]]});\n        }\n\n        console.log(numberToNote[midiNumber]);\n        this.setState({updated:true});\n        console.log(this.state.list);\n        return null;\n    };\n\n    stopNote = (midiNumber) =>\n    {   \n        return null;\n    };\n\n    onClearNotes = () =>\n    {\n        this.setState({listNames: [], listMidi: []});\n    }\n\n    render() {\n        return (\n        <div> \n            <div class=\"ui divider\"></div>\n            <div class=\"ui container\">\n                <b>Set Analyzer, v0.5</b><br/><br/>\n                <i>Input a pitch-class set using the keyboard below.<br/>\n                Once finished, click the \"Compute set characteristics\" button!</i>\n            </div>\n            <div class=\"ui divider\"></div>\n            <Analyzer \n                noteNamesOn={this.state.listNames}\n                noteNumbersOn={this.state.listMidi}/>\n            <div class=\"ui divider\"></div>\n            <div class=\"ui container\">\n            <SetList\n                noteNamesOn={this.state.listNames}/>\n            <Piano\n                noteRange={noteRange}\n                width={660}\n                playNote={this.playNote}\n                stopNote={this.stopNote}\n            /> \n            <button type=\"button\" onClick={this.onClearNotes}>\n                Clear notes\n            </button>\n            \n            </div>\n            <div class=\"ui divider\"></div>\n        </div>\n        )\n    };\n    \n}\n\n\nReactDOM.render(\n    <App />,\n    document.querySelector('#root')\n)"]},"metadata":{},"sourceType":"module"}