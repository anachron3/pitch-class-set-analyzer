{"ast":null,"code":"import range from 'just-range';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport difference from 'lodash.difference';\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (typeof call === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest();\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}\n\nvar SORTED_PITCHES = ['C', 'Db', 'D', 'Eb', 'E', 'F', 'Gb', 'G', 'Ab', 'A', 'Bb', 'B'];\nvar ACCIDENTAL_PITCHES = ['Db', 'Eb', 'Gb', 'Ab', 'Bb'];\nvar PITCH_INDEXES = {\n  C: 0,\n  'C#': 1,\n  Db: 1,\n  D: 2,\n  'D#': 3,\n  Eb: 3,\n  E: 4,\n  F: 5,\n  'F#': 6,\n  Gb: 6,\n  G: 7,\n  'G#': 8,\n  Ab: 8,\n  A: 9,\n  'A#': 10,\n  Bb: 10,\n  B: 11\n};\nvar MIDI_NUMBER_C0 = 12;\nvar MIN_MIDI_NUMBER = MIDI_NUMBER_C0;\nvar MAX_MIDI_NUMBER = 127;\nvar NOTE_REGEX = /([a-g])([#b]?)(\\d+)/;\nvar NOTES_IN_OCTAVE = 12; // Converts string notes in scientific pitch notation to a MIDI number, or null.\n//\n// Example: \"c#0\" => 13, \"eb5\" => 75, \"abc\" => null\n//\n// References:\n// - http://www.flutopedia.com/octave_notation.htm\n// - https://github.com/danigb/tonal/blob/master/packages/note/index.js\n\nfunction fromNote(note) {\n  if (!note) {\n    throw Error('Invalid note argument');\n  }\n\n  var match = NOTE_REGEX.exec(note.toLowerCase());\n\n  if (!match) {\n    throw Error('Invalid note argument');\n  }\n\n  var _match = _slicedToArray(match, 4),\n      letter = _match[1],\n      accidental = _match[2],\n      octave = _match[3];\n\n  var pitchName = \"\".concat(letter.toUpperCase()).concat(accidental);\n  var pitchIndex = PITCH_INDEXES[pitchName];\n\n  if (pitchIndex == null) {\n    throw Error('Invalid note argument');\n  }\n\n  return MIDI_NUMBER_C0 + pitchIndex + NOTES_IN_OCTAVE * parseInt(octave, 10);\n} //\n// Build cache for getAttributes\n//\n\n\nfunction buildMidiNumberAttributes(midiNumber) {\n  var pitchIndex = (midiNumber - MIDI_NUMBER_C0) % NOTES_IN_OCTAVE;\n  var octave = Math.floor((midiNumber - MIDI_NUMBER_C0) / NOTES_IN_OCTAVE);\n  var pitchName = SORTED_PITCHES[pitchIndex];\n  return {\n    note: \"\".concat(pitchName).concat(octave),\n    pitchName: pitchName,\n    octave: octave,\n    midiNumber: midiNumber,\n    isAccidental: ACCIDENTAL_PITCHES.includes(pitchName)\n  };\n}\n\nfunction buildMidiNumberAttributesCache() {\n  return range(MIN_MIDI_NUMBER, MAX_MIDI_NUMBER + 1).reduce(function (cache, midiNumber) {\n    cache[midiNumber] = buildMidiNumberAttributes(midiNumber);\n    return cache;\n  }, {});\n}\n\nvar midiNumberAttributesCache = buildMidiNumberAttributesCache(); // Returns an object containing various attributes for a given MIDI number.\n// Throws error for invalid midiNumbers.\n\nfunction getAttributes(midiNumber) {\n  var attrs = midiNumberAttributesCache[midiNumber];\n\n  if (!attrs) {\n    throw Error('Invalid MIDI number');\n  }\n\n  return attrs;\n} // Returns all MIDI numbers corresponding to natural notes, e.g. C and not C# or Bb.\n\n\nvar NATURAL_MIDI_NUMBERS = range(MIN_MIDI_NUMBER, MAX_MIDI_NUMBER + 1).filter(function (midiNumber) {\n  return !getAttributes(midiNumber).isAccidental;\n});\nvar MidiNumbers = {\n  fromNote: fromNote,\n  getAttributes: getAttributes,\n  MIN_MIDI_NUMBER: MIN_MIDI_NUMBER,\n  MAX_MIDI_NUMBER: MAX_MIDI_NUMBER,\n  NATURAL_MIDI_NUMBERS: NATURAL_MIDI_NUMBERS\n};\n\nvar Key = /*#__PURE__*/function (_React$Component) {\n  _inherits(Key, _React$Component);\n\n  function Key() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Key);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Key)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"onPlayNoteInput\", function () {\n      _this.props.onPlayNoteInput(_this.props.midiNumber);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onStopNoteInput\", function () {\n      _this.props.onStopNoteInput(_this.props.midiNumber);\n    });\n\n    return _this;\n  }\n\n  _createClass(Key, [{\n    key: \"getAbsoluteKeyPosition\",\n    // Key position is represented by the number of natural key widths from the left\n    value: function getAbsoluteKeyPosition(midiNumber) {\n      var OCTAVE_WIDTH = 7;\n\n      var _MidiNumbers$getAttri = MidiNumbers.getAttributes(midiNumber),\n          octave = _MidiNumbers$getAttri.octave,\n          pitchName = _MidiNumbers$getAttri.pitchName;\n\n      var pitchPosition = this.props.pitchPositions[pitchName];\n      var octavePosition = OCTAVE_WIDTH * octave;\n      return pitchPosition + octavePosition;\n    }\n  }, {\n    key: \"getRelativeKeyPosition\",\n    value: function getRelativeKeyPosition(midiNumber) {\n      return this.getAbsoluteKeyPosition(midiNumber) - this.getAbsoluteKeyPosition(this.props.noteRange.first);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          naturalKeyWidth = _this$props.naturalKeyWidth,\n          accidentalWidthRatio = _this$props.accidentalWidthRatio,\n          midiNumber = _this$props.midiNumber,\n          gliss = _this$props.gliss,\n          useTouchEvents = _this$props.useTouchEvents,\n          accidental = _this$props.accidental,\n          active = _this$props.active,\n          disabled = _this$props.disabled,\n          children = _this$props.children; // Need to conditionally include/exclude handlers based on useTouchEvents,\n      // because otherwise mobile taps double fire events.\n\n      return React.createElement(\"div\", {\n        className: classNames('ReactPiano__Key', {\n          'ReactPiano__Key--accidental': accidental,\n          'ReactPiano__Key--natural': !accidental,\n          'ReactPiano__Key--disabled': disabled,\n          'ReactPiano__Key--active': active\n        }),\n        style: {\n          left: ratioToPercentage(this.getRelativeKeyPosition(midiNumber) * naturalKeyWidth),\n          width: ratioToPercentage(accidental ? accidentalWidthRatio * naturalKeyWidth : naturalKeyWidth)\n        },\n        onMouseDown: useTouchEvents ? null : this.onPlayNoteInput,\n        onMouseUp: useTouchEvents ? null : this.onStopNoteInput,\n        onMouseEnter: gliss ? this.onPlayNoteInput : null,\n        onMouseLeave: this.onStopNoteInput,\n        onTouchStart: useTouchEvents ? this.onPlayNoteInput : null,\n        onTouchCancel: useTouchEvents ? this.onStopNoteInput : null,\n        onTouchEnd: useTouchEvents ? this.onStopNoteInput : null\n      }, React.createElement(\"div\", {\n        className: \"ReactPiano__NoteLabelContainer\"\n      }, children));\n    }\n  }]);\n\n  return Key;\n}(React.Component);\n\n_defineProperty(Key, \"propTypes\", {\n  midiNumber: PropTypes.number.isRequired,\n  naturalKeyWidth: PropTypes.number.isRequired,\n  // Width as a ratio between 0 and 1\n  gliss: PropTypes.bool.isRequired,\n  useTouchEvents: PropTypes.bool.isRequired,\n  accidental: PropTypes.bool.isRequired,\n  active: PropTypes.bool.isRequired,\n  disabled: PropTypes.bool.isRequired,\n  onPlayNoteInput: PropTypes.func.isRequired,\n  onStopNoteInput: PropTypes.func.isRequired,\n  accidentalWidthRatio: PropTypes.number.isRequired,\n  pitchPositions: PropTypes.object.isRequired,\n  children: PropTypes.node\n});\n\n_defineProperty(Key, \"defaultProps\", {\n  accidentalWidthRatio: 0.65,\n  pitchPositions: {\n    C: 0,\n    Db: 0.55,\n    D: 1,\n    Eb: 1.8,\n    E: 2,\n    F: 3,\n    Gb: 3.5,\n    G: 4,\n    Ab: 4.7,\n    A: 5,\n    Bb: 5.85,\n    B: 6\n  }\n});\n\nfunction ratioToPercentage(ratio) {\n  return \"\".concat(ratio * 100, \"%\");\n}\n\nvar Keyboard = /*#__PURE__*/function (_React$Component) {\n  _inherits(Keyboard, _React$Component);\n\n  function Keyboard() {\n    _classCallCheck(this, Keyboard);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Keyboard).apply(this, arguments));\n  }\n\n  _createClass(Keyboard, [{\n    key: \"getMidiNumbers\",\n    // Range of midi numbers on keyboard\n    value: function getMidiNumbers() {\n      return range(this.props.noteRange.first, this.props.noteRange.last + 1);\n    }\n  }, {\n    key: \"getNaturalKeyCount\",\n    value: function getNaturalKeyCount() {\n      return this.getMidiNumbers().filter(function (number) {\n        var _MidiNumbers$getAttri = MidiNumbers.getAttributes(number),\n            isAccidental = _MidiNumbers$getAttri.isAccidental;\n\n        return !isAccidental;\n      }).length;\n    } // Returns a ratio between 0 and 1\n\n  }, {\n    key: \"getNaturalKeyWidth\",\n    value: function getNaturalKeyWidth() {\n      return 1 / this.getNaturalKeyCount();\n    }\n  }, {\n    key: \"getWidth\",\n    value: function getWidth() {\n      return this.props.width ? this.props.width : '100%';\n    }\n  }, {\n    key: \"getHeight\",\n    value: function getHeight() {\n      if (!this.props.width) {\n        return '100%';\n      }\n\n      var keyWidth = this.props.width * this.getNaturalKeyWidth();\n      return \"\".concat(keyWidth / this.props.keyWidthToHeight, \"px\");\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      var naturalKeyWidth = this.getNaturalKeyWidth();\n      return React.createElement(\"div\", {\n        className: classNames('ReactPiano__Keyboard', this.props.className),\n        style: {\n          width: this.getWidth(),\n          height: this.getHeight()\n        }\n      }, this.getMidiNumbers().map(function (midiNumber) {\n        var _MidiNumbers$getAttri2 = MidiNumbers.getAttributes(midiNumber),\n            note = _MidiNumbers$getAttri2.note,\n            isAccidental = _MidiNumbers$getAttri2.isAccidental;\n\n        var isActive = !_this.props.disabled && _this.props.activeNotes.includes(midiNumber);\n\n        return React.createElement(Key, {\n          naturalKeyWidth: naturalKeyWidth,\n          midiNumber: midiNumber,\n          noteRange: _this.props.noteRange,\n          active: isActive,\n          accidental: isAccidental,\n          disabled: _this.props.disabled,\n          onPlayNoteInput: _this.props.onPlayNoteInput,\n          onStopNoteInput: _this.props.onStopNoteInput,\n          gliss: _this.props.gliss,\n          useTouchEvents: _this.props.useTouchEvents,\n          key: midiNumber\n        }, _this.props.disabled ? null : _this.props.renderNoteLabel({\n          isActive: isActive,\n          isAccidental: isAccidental,\n          midiNumber: midiNumber\n        }));\n      }));\n    }\n  }]);\n\n  return Keyboard;\n}(React.Component);\n\n_defineProperty(Keyboard, \"propTypes\", {\n  noteRange: noteRangePropType,\n  activeNotes: PropTypes.arrayOf(PropTypes.number),\n  onPlayNoteInput: PropTypes.func.isRequired,\n  onStopNoteInput: PropTypes.func.isRequired,\n  renderNoteLabel: PropTypes.func.isRequired,\n  keyWidthToHeight: PropTypes.number.isRequired,\n  className: PropTypes.string,\n  disabled: PropTypes.bool,\n  gliss: PropTypes.bool,\n  useTouchEvents: PropTypes.bool,\n  // If width is not provided, must have fixed width and height in parent container\n  width: PropTypes.number\n});\n\n_defineProperty(Keyboard, \"defaultProps\", {\n  disabled: false,\n  gliss: false,\n  useTouchEvents: false,\n  keyWidthToHeight: 0.33,\n  renderNoteLabel: function renderNoteLabel() {}\n});\n\nfunction isNaturalMidiNumber(value) {\n  if (typeof value !== 'number') {\n    return false;\n  }\n\n  return MidiNumbers.NATURAL_MIDI_NUMBERS.includes(value);\n}\n\nfunction noteRangePropType(props, propName, componentName) {\n  var _props$propName = props[propName],\n      first = _props$propName.first,\n      last = _props$propName.last;\n\n  if (!first || !last) {\n    return new Error(\"Invalid prop \".concat(propName, \" supplied to \").concat(componentName, \". \").concat(propName, \" must be an object with .first and .last values.\"));\n  }\n\n  if (!isNaturalMidiNumber(first) || !isNaturalMidiNumber(last)) {\n    return new Error(\"Invalid prop \".concat(propName, \" supplied to \").concat(componentName, \". \").concat(propName, \" values must be valid MIDI numbers, and should not be accidentals (sharp or flat notes).\"));\n  }\n\n  if (first >= last) {\n    return new Error(\"Invalid prop \".concat(propName, \" supplied to \").concat(componentName, \". \").concat(propName, \".first must be smaller than \").concat(propName, \".last.\"));\n  }\n}\n\nvar ControlledPiano = /*#__PURE__*/function (_React$Component) {\n  _inherits(ControlledPiano, _React$Component);\n\n  function ControlledPiano() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ControlledPiano);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ControlledPiano)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      isMouseDown: false,\n      useTouchEvents: false\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleNoteChanges\", function (_ref) {\n      var prevActiveNotes = _ref.prevActiveNotes,\n          nextActiveNotes = _ref.nextActiveNotes;\n\n      if (_this.props.disabled) {\n        return;\n      }\n\n      var notesStopped = difference(prevActiveNotes, nextActiveNotes);\n      var notesStarted = difference(nextActiveNotes, prevActiveNotes);\n      notesStarted.forEach(function (midiNumber) {\n        _this.props.playNote(midiNumber);\n      });\n      notesStopped.forEach(function (midiNumber) {\n        _this.props.stopNote(midiNumber);\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getMidiNumberForKey\", function (key) {\n      if (!_this.props.keyboardShortcuts) {\n        return null;\n      }\n\n      var shortcut = _this.props.keyboardShortcuts.find(function (sh) {\n        return sh.key === key;\n      });\n\n      return shortcut && shortcut.midiNumber;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getKeyForMidiNumber\", function (midiNumber) {\n      if (!_this.props.keyboardShortcuts) {\n        return null;\n      }\n\n      var shortcut = _this.props.keyboardShortcuts.find(function (sh) {\n        return sh.midiNumber === midiNumber;\n      });\n\n      return shortcut && shortcut.key;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onKeyDown\", function (event) {\n      // Don't conflict with existing combinations like ctrl + t\n      if (event.ctrlKey || event.metaKey || event.shiftKey) {\n        return;\n      }\n\n      var midiNumber = _this.getMidiNumberForKey(event.key);\n\n      if (midiNumber) {\n        _this.onPlayNoteInput(midiNumber);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onKeyUp\", function (event) {\n      // This *should* also check for event.ctrlKey || event.metaKey || event.ShiftKey like onKeyDown does,\n      // but at least on Mac Chrome, when mashing down many alphanumeric keystrokes at once,\n      // ctrlKey is fired unexpectedly, which would cause onStopNote to NOT be fired, which causes problematic\n      // lingering notes. Since it's fairly safe to call onStopNote even when not necessary,\n      // the ctrl/meta/shift check is removed to fix that issue.\n      var midiNumber = _this.getMidiNumberForKey(event.key);\n\n      if (midiNumber) {\n        _this.onStopNoteInput(midiNumber);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onPlayNoteInput\", function (midiNumber) {\n      if (_this.props.disabled) {\n        return;\n      } // Pass in previous activeNotes for recording functionality\n\n\n      _this.props.onPlayNoteInput(midiNumber, _this.props.activeNotes);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onStopNoteInput\", function (midiNumber) {\n      if (_this.props.disabled) {\n        return;\n      } // Pass in previous activeNotes for recording functionality\n\n\n      _this.props.onStopNoteInput(midiNumber, _this.props.activeNotes);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onMouseDown\", function () {\n      _this.setState({\n        isMouseDown: true\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onMouseUp\", function () {\n      _this.setState({\n        isMouseDown: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onTouchStart\", function () {\n      _this.setState({\n        useTouchEvents: true\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"renderNoteLabel\", function (_ref2) {\n      var midiNumber = _ref2.midiNumber,\n          isActive = _ref2.isActive,\n          isAccidental = _ref2.isAccidental;\n\n      var keyboardShortcut = _this.getKeyForMidiNumber(midiNumber);\n\n      return _this.props.renderNoteLabel({\n        keyboardShortcut: keyboardShortcut,\n        midiNumber: midiNumber,\n        isActive: isActive,\n        isAccidental: isAccidental\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(ControlledPiano, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      window.addEventListener('keydown', this.onKeyDown);\n      window.addEventListener('keyup', this.onKeyUp);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      window.removeEventListener('keydown', this.onKeyDown);\n      window.removeEventListener('keyup', this.onKeyUp);\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      if (this.props.activeNotes !== prevProps.activeNotes) {\n        this.handleNoteChanges({\n          prevActiveNotes: prevProps.activeNotes || [],\n          nextActiveNotes: this.props.activeNotes || []\n        });\n      }\n    } // This function is responsible for diff'ing activeNotes\n    // and playing or stopping notes accordingly.\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        style: {\n          width: '100%',\n          height: '100%'\n        },\n        onMouseDown: this.onMouseDown,\n        onMouseUp: this.onMouseUp,\n        onTouchStart: this.onTouchStart,\n        \"data-testid\": \"container\"\n      }, React.createElement(Keyboard, {\n        noteRange: this.props.noteRange,\n        onPlayNoteInput: this.onPlayNoteInput,\n        onStopNoteInput: this.onStopNoteInput,\n        activeNotes: this.props.activeNotes,\n        className: this.props.className,\n        disabled: this.props.disabled,\n        width: this.props.width,\n        keyWidthToHeight: this.props.keyWidthToHeight,\n        gliss: this.state.isMouseDown,\n        useTouchEvents: this.state.useTouchEvents,\n        renderNoteLabel: this.renderNoteLabel\n      }));\n    }\n  }]);\n\n  return ControlledPiano;\n}(React.Component);\n\n_defineProperty(ControlledPiano, \"propTypes\", {\n  noteRange: PropTypes.object.isRequired,\n  activeNotes: PropTypes.arrayOf(PropTypes.number.isRequired).isRequired,\n  playNote: PropTypes.func.isRequired,\n  stopNote: PropTypes.func.isRequired,\n  onPlayNoteInput: PropTypes.func.isRequired,\n  onStopNoteInput: PropTypes.func.isRequired,\n  renderNoteLabel: PropTypes.func.isRequired,\n  className: PropTypes.string,\n  disabled: PropTypes.bool,\n  width: PropTypes.number,\n  keyWidthToHeight: PropTypes.number,\n  keyboardShortcuts: PropTypes.arrayOf(PropTypes.shape({\n    key: PropTypes.string.isRequired,\n    midiNumber: PropTypes.number.isRequired\n  }))\n});\n\n_defineProperty(ControlledPiano, \"defaultProps\", {\n  renderNoteLabel: function renderNoteLabel(_ref3) {\n    var keyboardShortcut = _ref3.keyboardShortcut,\n        midiNumber = _ref3.midiNumber,\n        isActive = _ref3.isActive,\n        isAccidental = _ref3.isAccidental;\n    return keyboardShortcut ? React.createElement(\"div\", {\n      className: classNames('ReactPiano__NoteLabel', {\n        'ReactPiano__NoteLabel--active': isActive,\n        'ReactPiano__NoteLabel--accidental': isAccidental,\n        'ReactPiano__NoteLabel--natural': !isAccidental\n      })\n    }, keyboardShortcut) : null;\n  }\n});\n\nvar Piano = /*#__PURE__*/function (_React$Component) {\n  _inherits(Piano, _React$Component);\n\n  function Piano() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Piano);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Piano)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      activeNotes: _this.props.activeNotes || []\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handlePlayNoteInput\", function (midiNumber) {\n      _this.setState(function (prevState) {\n        // Need to be handled inside setState in order to set prevActiveNotes without\n        // race conditions.\n        if (_this.props.onPlayNoteInput) {\n          _this.props.onPlayNoteInput(midiNumber, {\n            prevActiveNotes: prevState.activeNotes\n          });\n        } // Don't append note to activeNotes if it's already present\n\n\n        if (prevState.activeNotes.includes(midiNumber)) {\n          return null;\n        }\n\n        return {\n          activeNotes: prevState.activeNotes.concat(midiNumber)\n        };\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleStopNoteInput\", function (midiNumber) {\n      _this.setState(function (prevState) {\n        // Need to be handled inside setState in order to set prevActiveNotes without\n        // race conditions.\n        if (_this.props.onStopNoteInput) {\n          _this.props.onStopNoteInput(midiNumber, {\n            prevActiveNotes: _this.state.activeNotes\n          });\n        }\n\n        return {\n          activeNotes: prevState.activeNotes.filter(function (note) {\n            return midiNumber !== note;\n          })\n        };\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(Piano, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      // Make activeNotes \"controllable\" by using internal\n      // state by default, but allowing prop overrides.\n      if (prevProps.activeNotes !== this.props.activeNotes && this.state.activeNotes !== this.props.activeNotes) {\n        this.setState({\n          activeNotes: this.props.activeNotes || []\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          activeNotes = _this$props.activeNotes,\n          onPlayNoteInput = _this$props.onPlayNoteInput,\n          onStopNoteInput = _this$props.onStopNoteInput,\n          otherProps = _objectWithoutProperties(_this$props, [\"activeNotes\", \"onPlayNoteInput\", \"onStopNoteInput\"]);\n\n      return React.createElement(ControlledPiano, _extends({\n        activeNotes: this.state.activeNotes,\n        onPlayNoteInput: this.handlePlayNoteInput,\n        onStopNoteInput: this.handleStopNoteInput\n      }, otherProps));\n    }\n  }]);\n\n  return Piano;\n}(React.Component);\n\n_defineProperty(Piano, \"propTypes\", {\n  noteRange: PropTypes.object.isRequired,\n  activeNotes: PropTypes.arrayOf(PropTypes.number.isRequired),\n  playNote: PropTypes.func.isRequired,\n  stopNote: PropTypes.func.isRequired,\n  onPlayNoteInput: PropTypes.func,\n  onStopNoteInput: PropTypes.func,\n  renderNoteLabel: PropTypes.func,\n  className: PropTypes.string,\n  disabled: PropTypes.bool,\n  width: PropTypes.number,\n  keyWidthToHeight: PropTypes.number,\n  keyboardShortcuts: PropTypes.arrayOf(PropTypes.shape({\n    key: PropTypes.string.isRequired,\n    midiNumber: PropTypes.number.isRequired\n  }))\n});\n\nfunction createKeyboardShortcuts(_ref) {\n  var firstNote = _ref.firstNote,\n      lastNote = _ref.lastNote,\n      keyboardConfig = _ref.keyboardConfig;\n  var currentMidiNumber = firstNote;\n  var naturalKeyIndex = 0;\n  var keyboardShortcuts = [];\n\n  while ( // There are still keys to be assigned\n  naturalKeyIndex < keyboardConfig.length && // Note to be assigned does not surpass range\n  currentMidiNumber <= lastNote) {\n    var key = keyboardConfig[naturalKeyIndex];\n\n    var _MidiNumbers$getAttri = MidiNumbers.getAttributes(currentMidiNumber),\n        isAccidental = _MidiNumbers$getAttri.isAccidental;\n\n    if (isAccidental) {\n      keyboardShortcuts.push({\n        key: key.flat,\n        midiNumber: currentMidiNumber\n      });\n    } else {\n      keyboardShortcuts.push({\n        key: key.natural,\n        midiNumber: currentMidiNumber\n      });\n      naturalKeyIndex += 1;\n    }\n\n    currentMidiNumber += 1;\n  }\n\n  return keyboardShortcuts;\n}\n\nvar KeyboardShortcuts = {\n  create: createKeyboardShortcuts,\n  // Preset configurations\n  BOTTOM_ROW: [{\n    natural: 'z',\n    flat: 'a',\n    sharp: 's'\n  }, {\n    natural: 'x',\n    flat: 's',\n    sharp: 'd'\n  }, {\n    natural: 'c',\n    flat: 'd',\n    sharp: 'f'\n  }, {\n    natural: 'v',\n    flat: 'f',\n    sharp: 'g'\n  }, {\n    natural: 'b',\n    flat: 'g',\n    sharp: 'h'\n  }, {\n    natural: 'n',\n    flat: 'h',\n    sharp: 'j'\n  }, {\n    natural: 'm',\n    flat: 'j',\n    sharp: 'k'\n  }, {\n    natural: ',',\n    flat: 'k',\n    sharp: 'l'\n  }, {\n    natural: '.',\n    flat: 'l',\n    sharp: ';'\n  }, {\n    natural: '/',\n    flat: ';',\n    sharp: \"'\"\n  }],\n  HOME_ROW: [{\n    natural: 'a',\n    flat: 'q',\n    sharp: 'w'\n  }, {\n    natural: 's',\n    flat: 'w',\n    sharp: 'e'\n  }, {\n    natural: 'd',\n    flat: 'e',\n    sharp: 'r'\n  }, {\n    natural: 'f',\n    flat: 'r',\n    sharp: 't'\n  }, {\n    natural: 'g',\n    flat: 't',\n    sharp: 'y'\n  }, {\n    natural: 'h',\n    flat: 'y',\n    sharp: 'u'\n  }, {\n    natural: 'j',\n    flat: 'u',\n    sharp: 'i'\n  }, {\n    natural: 'k',\n    flat: 'i',\n    sharp: 'o'\n  }, {\n    natural: 'l',\n    flat: 'o',\n    sharp: 'p'\n  }, {\n    natural: ';',\n    flat: 'p',\n    sharp: '['\n  }, {\n    natural: \"'\",\n    flat: '[',\n    sharp: ']'\n  }],\n  QWERTY_ROW: [{\n    natural: 'q',\n    flat: '1',\n    sharp: '2'\n  }, {\n    natural: 'w',\n    flat: '2',\n    sharp: '3'\n  }, {\n    natural: 'e',\n    flat: '3',\n    sharp: '4'\n  }, {\n    natural: 'r',\n    flat: '4',\n    sharp: '5'\n  }, {\n    natural: 't',\n    flat: '5',\n    sharp: '6'\n  }, {\n    natural: 'y',\n    flat: '6',\n    sharp: '7'\n  }, {\n    natural: 'u',\n    flat: '7',\n    sharp: '8'\n  }, {\n    natural: 'i',\n    flat: '8',\n    sharp: '9'\n  }, {\n    natural: 'o',\n    flat: '9',\n    sharp: '0'\n  }, {\n    natural: 'p',\n    flat: '0',\n    sharp: '-'\n  }, {\n    natural: '[',\n    flat: '-',\n    sharp: '='\n  }]\n};\nexport { ControlledPiano, Piano, Keyboard, KeyboardShortcuts, MidiNumbers };","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,IAAMA,cAAc,GAAG,CAAC,GAAD,EAAM,IAAN,EAAY,GAAZ,EAAiB,IAAjB,EAAuB,GAAvB,EAA4B,GAA5B,EAAiC,IAAjC,EAAuC,GAAvC,EAA4C,IAA5C,EAAkD,GAAlD,EAAuD,IAAvD,EAA6D,GAA7D,CAAvB;AACA,IAAMC,kBAAkB,GAAG,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,EAAyB,IAAzB,CAA3B;AACA,IAAMC,aAAa,GAAG;AACpBC,GAAC,EAAE,CADiB;QAEd,CAFc;AAGpBC,IAAE,EAAE,CAHgB;AAIpBC,GAAC,EAAE,CAJiB;QAKd,CALc;AAMpBC,IAAE,EAAE,CANgB;AAOpBC,GAAC,EAAE,CAPiB;AAQpBC,GAAC,EAAE,CARiB;QASd,CATc;AAUpBC,IAAE,EAAE,CAVgB;AAWpBC,GAAC,EAAE,CAXiB;QAYd,CAZc;AAapBC,IAAE,EAAE,CAbgB;AAcpBC,GAAC,EAAE,CAdiB;QAed,EAfc;AAgBpBC,IAAE,EAAE,EAhBgB;AAiBpBC,GAAC,EAAE;AAjBiB,CAAtB;AAmBA,IAAMC,cAAc,GAAG,EAAvB;AACA,IAAMC,eAAe,GAAGD,cAAxB;AACA,IAAME,eAAe,GAAG,GAAxB;AACA,IAAMC,UAAU,GAAG,qBAAnB;AACA,IAAMC,eAAe,GAAG,EAAxB,C,CAAA;;;;;;;;AASA,SAASC,QAAT,CAAkBC,IAAlB,EAAwB;MAClB,CAACA,MAAM;UACHC,KAAK,CAAC,uBAAD;;;MAEPC,KAAK,GAAGL,UAAU,CAACM,IAAXN,CAAgBG,IAAI,CAACI,WAALJ,EAAhBH;;MACV,CAACK,OAAO;UACJD,KAAK,CAAC,uBAAD;;;8BAE0BC,OARjB;MAQbG,MARa;MAQLC,UARK;MAQOC,MARP;;MAShBC,SAAS,aAAMH,MAAM,CAACI,WAAPJ,EAAN,SAA6BC,UAA7B;MACTI,UAAU,GAAG7B,aAAa,CAAC2B,SAAD;;MAC5BE,UAAU,IAAI,MAAM;UAChBT,KAAK,CAAC,uBAAD;;;SAENP,cAAc,GAAGgB,UAAjBhB,GAA8BI,eAAe,GAAGa,QAAQ,CAACJ,MAAD,EAAS,EAAT;;;;;;AAMjE,SAASK,yBAAT,CAAmCC,UAAnC,EAA+C;MACvCH,UAAU,GAAG,CAACG,UAAU,GAAGnB,cAAd,IAAgCI;MAC7CS,MAAM,GAAGO,IAAI,CAACC,KAALD,CAAW,CAACD,UAAU,GAAGnB,cAAd,IAAgCI,eAA3CgB;MACTN,SAAS,GAAG7B,cAAc,CAAC+B,UAAD;SACzB;AACLV,QAAI,YAAKQ,SAAL,SAAiBD,MAAjB,CADC;AAELC,aAAS,EAATA,SAFK;AAGLD,UAAM,EAANA,MAHK;AAILM,cAAU,EAAVA,UAJK;AAKLG,gBAAY,EAAEpC,kBAAkB,CAACqC,QAAnBrC,CAA4B4B,SAA5B5B;AALT;;;AAST,SAASsC,8BAAT,GAA0C;SACjCC,KAAK,CAACxB,eAAD,EAAkBC,eAAe,GAAG,CAApC,CAALuB,CAA4CC,MAA5CD,CAAmD,UAACE,KAAD,EAAQR,UAAR,EAAuB;AAC/EQ,SAAK,CAACR,UAAD,CAALQ,GAAoBT,yBAAyB,CAACC,UAAD,CAA7CQ;WACOA;AAFF,KAGJ,EAHIF;;;AAMT,IAAMG,yBAAyB,GAAGJ,8BAA8B,EAAhE,C,CAAA;;;AAIA,SAASK,aAAT,CAAuBV,UAAvB,EAAmC;MAC3BW,KAAK,GAAGF,yBAAyB,CAACT,UAAD;;MACnC,CAACW,OAAO;UACJvB,KAAK,CAAC,qBAAD;;;SAENuB;;;;AAIT,IAAMC,oBAAoB,GAAGN,KAAK,CAACxB,eAAD,EAAkBC,eAAe,GAAG,CAApC,CAALuB,CAA4CO,MAA5CP,CAC3B,UAACN,UAAD;SAAgB,CAACU,aAAa,CAACV,UAAD,CAAbU,CAA0BP;AADhB,EAA7B;AAIA,kBAAe;AACbjB,UAAQ,EAARA,QADa;AAEbwB,eAAa,EAAbA,aAFa;AAGb5B,iBAAe,EAAfA,eAHa;AAIbC,iBAAe,EAAfA,eAJa;AAKb6B,sBAAoB,EAApBA;AALa,CAAf;;ICvFME;;;;;;;;;;;;;;;;sEAkCc,YAAM;YACjBC,MAAMC,gBAAgBC,MAAKF,KAAL,CAAWf;;;sEAGtB,YAAM;YACjBe,MAAMG,gBAAgBD,MAAKF,KAAL,CAAWf;;;;;;;;;2CAIjBA,YAAY;UAC3BmB,YAAY,GAAG;;kCACSC,WAAW,CAACV,aAAZU,CAA0BpB,UAA1BoB;UAAtB1B,MAFyB,yBAEzBA;UAAQC,SAFiB,yBAEjBA;;UACV0B,aAAa,GAAG,KAAKN,KAAL,CAAWO,cAAX,CAA0B3B,SAA1B;UAChB4B,cAAc,GAAGJ,YAAY,GAAGzB;aAC/B2B,aAAa,GAAGE;;;;2CAGFvB,YAAY;aAE/B,KAAKwB,sBAAL,CAA4BxB,UAA5B,IACA,KAAKwB,sBAAL,CAA4B,KAAKT,KAAL,CAAWU,SAAX,CAAqBC,KAAjD;;;;6BAIK;wBAWH,KAAKX;UATPY,eAFK,eAELA;UACAC,oBAHK,eAGLA;UACA5B,UAJK,eAILA;UACA6B,KALK,eAKLA;UACAC,cANK,eAMLA;UACArC,UAPK,eAOLA;UACAsC,MARK,eAQLA;UACAC,QATK,eASLA;UACAC,QAVK,eAULA,SAVK;;;aAgBLC;AACEC,iBAAS,EAAEC,UAAU,CAAC,iBAAD,EAAoB;yCACR3C,UADQ;sCAEX,CAACA,UAFU;uCAGVuC,QAHU;qCAIZD;AAJY,SAApB,CADvB;AAOEM,aAAK,EAAE;AACLC,cAAI,EAAEC,iBAAiB,CAAC,KAAKC,sBAAL,CAA4BxC,UAA5B,IAA0C2B,eAA3C,CADlB;AAELc,eAAK,EAAEF,iBAAiB,CACtB9C,UAAU,GAAGmC,oBAAoB,GAAGD,eAA1B,GAA4CA,eADhC;AAFnB,SAPT;AAaEe,mBAAW,EAAEZ,cAAc,GAAG,IAAH,GAAU,KAAKd,eAb5C;AAcE2B,iBAAS,EAAEb,cAAc,GAAG,IAAH,GAAU,KAAKZ,eAd1C;AAeE0B,oBAAY,EAAEf,KAAK,GAAG,KAAKb,eAAR,GAA0B,IAf/C;AAgBE6B,oBAAY,EAAE,KAAK3B,eAhBrB;AAiBE4B,oBAAY,EAAEhB,cAAc,GAAG,KAAKd,eAAR,GAA0B,IAjBxD;AAkBE+B,qBAAa,EAAEjB,cAAc,GAAG,KAAKZ,eAAR,GAA0B,IAlBzD;AAmBE8B,kBAAU,EAAElB,cAAc,GAAG,KAAKZ,eAAR,GAA0B;AAnBtD,SAqBEgB;AAAKC,iBAAS,EAAC;AAAf,SAAiDF,QAAjD,CArBF;;;;;EA1EYC,KAAK,CAACe;;gBAAlBnC,kBACe;AACjBd,YAAU,EAAEkD,SAAS,CAACC,MAAVD,CAAiBE,UADZ;AAEjBzB,iBAAe,EAAEuB,SAAS,CAACC,MAAVD,CAAiBE,UAFjB;;AAGjBvB,OAAK,EAAEqB,SAAS,CAACG,IAAVH,CAAeE,UAHL;AAIjBtB,gBAAc,EAAEoB,SAAS,CAACG,IAAVH,CAAeE,UAJd;AAKjB3D,YAAU,EAAEyD,SAAS,CAACG,IAAVH,CAAeE,UALV;AAMjBrB,QAAM,EAAEmB,SAAS,CAACG,IAAVH,CAAeE,UANN;AAOjBpB,UAAQ,EAAEkB,SAAS,CAACG,IAAVH,CAAeE,UAPR;AAQjBpC,iBAAe,EAAEkC,SAAS,CAACI,IAAVJ,CAAeE,UARf;AASjBlC,iBAAe,EAAEgC,SAAS,CAACI,IAAVJ,CAAeE,UATf;AAUjBxB,sBAAoB,EAAEsB,SAAS,CAACC,MAAVD,CAAiBE,UAVtB;AAWjB9B,gBAAc,EAAE4B,SAAS,CAACK,MAAVL,CAAiBE,UAXhB;AAYjBnB,UAAQ,EAAEiB,SAAS,CAACM;AAZH;;gBADf1C,qBAgBkB;AACpBc,sBAAoB,EAAE,IADF;AAEpBN,gBAAc,EAAE;AACdrD,KAAC,EAAE,CADW;AAEdC,MAAE,EAAE,IAFU;AAGdC,KAAC,EAAE,CAHW;AAIdC,MAAE,EAAE,GAJU;AAKdC,KAAC,EAAE,CALW;AAMdC,KAAC,EAAE,CANW;AAOdC,MAAE,EAAE,GAPU;AAQdC,KAAC,EAAE,CARW;AASdC,MAAE,EAAE,GATU;AAUdC,KAAC,EAAE,CAVW;AAWdC,MAAE,EAAE,IAXU;AAYdC,KAAC,EAAE;AAZW;AAFI;;AAqFxB,SAAS2D,iBAAT,CAA2BkB,KAA3B,EAAkC;mBACtBA,KAAK,GAAG,KAAlB;;;ICpGIC;;;;;;;;;;;;qCAyBa;aACRpD,KAAK,CAAC,KAAKS,KAAL,CAAWU,SAAX,CAAqBC,KAAtB,EAA6B,KAAKX,KAAL,CAAWU,SAAX,CAAqBkC,IAArB,GAA4B,CAAzD;;;;yCAGO;aACZ,KAAKC,cAAL,GAAsB/C,MAAtB,CAA6B,UAACsC,MAAD,EAAY;oCACrB/B,WAAW,CAACV,aAAZU,CAA0B+B,MAA1B/B;YAAjBjB,YADsC,yBACtCA;;eACD,CAACA;AAFH,SAGJ0D;;;;;yCAIgB;aACZ,IAAI,KAAKC,kBAAL;;;;+BAGF;aACF,KAAK/C,KAAL,CAAW0B,KAAX,GAAmB,KAAK1B,KAAL,CAAW0B,KAA9B,GAAsC;;;;gCAGnC;UACN,CAAC,KAAK1B,KAAL,CAAW0B,OAAO;eACd;;;UAEHsB,QAAQ,GAAG,KAAKhD,KAAL,CAAW0B,KAAX,GAAmB,KAAKuB,kBAAL;uBAC1BD,QAAQ,GAAG,KAAKhD,KAAL,CAAWkD,kBAAhC;;;;6BAGO;;;UACDtC,eAAe,GAAG,KAAKqC,kBAAL;aAEtB9B;AACEC,iBAAS,EAAEC,UAAU,CAAC,sBAAD,EAAyB,KAAKrB,KAAL,CAAWoB,SAApC,CADvB;AAEEE,aAAK,EAAE;AAAEI,eAAK,EAAE,KAAKyB,QAAL,EAAT;AAA0BC,gBAAM,EAAE,KAAKC,SAAL;AAAlC;AAFT,SAIG,KAAKR,cAAL,GAAsBS,GAAtB,CAA0B,UAACrE,UAAD,EAAgB;qCACVoB,WAAW,CAACV,aAAZU,CAA0BpB,UAA1BoB;YAAvBjC,IADiC,0BACjCA;YAAMgB,YAD2B,0BAC3BA;;YACRmE,QAAQ,GAAG,CAACrD,KAAI,CAACF,KAAL,CAAWiB,QAAZ,IAAwBf,KAAI,CAACF,KAAL,CAAWwD,WAAX,CAAuBnE,QAAvB,CAAgCJ,UAAhC;;eAEvCkC,oBAACpB,GAAD;AACEa,yBAAe,EAAEA,eADnB;AAEE3B,oBAAU,EAAEA,UAFd;AAGEyB,mBAAS,EAAER,KAAI,CAACF,KAAL,CAAWU,SAHxB;AAIEM,gBAAM,EAAEuC,QAJV;AAKE7E,oBAAU,EAAEU,YALd;AAME6B,kBAAQ,EAAEf,KAAI,CAACF,KAAL,CAAWiB,QANvB;AAOEhB,yBAAe,EAAEC,KAAI,CAACF,KAAL,CAAWC,eAP9B;AAQEE,yBAAe,EAAED,KAAI,CAACF,KAAL,CAAWG,eAR9B;AASEW,eAAK,EAAEZ,KAAI,CAACF,KAAL,CAAWc,KATpB;AAUEC,wBAAc,EAAEb,KAAI,CAACF,KAAL,CAAWe,cAV7B;AAWE0C,aAAG,EAAExE;AAXP,WAaGiB,KAAI,CAACF,KAAL,CAAWiB,QAAX,GACG,IADH,GAEGf,KAAI,CAACF,KAAL,CAAW0D,eAAX,CAA2B;AACzBH,kBAAQ,EAARA,QADyB;AAEzBnE,sBAAY,EAAZA,YAFyB;AAGzBH,oBAAU,EAAVA;AAHyB,SAA3B,CAfN;AAJH,QAJH;;;;;EAxDiBkC,KAAK,CAACe;;gBAAvBS,uBACe;AACjBjC,WAAS,EAAEiD,iBADM;AAEjBH,aAAW,EAAErB,SAAS,CAACyB,OAAVzB,CAAkBA,SAAS,CAACC,MAA5BD,CAFI;AAGjBlC,iBAAe,EAAEkC,SAAS,CAACI,IAAVJ,CAAeE,UAHf;AAIjBlC,iBAAe,EAAEgC,SAAS,CAACI,IAAVJ,CAAeE,UAJf;AAKjBqB,iBAAe,EAAEvB,SAAS,CAACI,IAAVJ,CAAeE,UALf;AAMjBa,kBAAgB,EAAEf,SAAS,CAACC,MAAVD,CAAiBE,UANlB;AAOjBjB,WAAS,EAAEe,SAAS,CAAC0B,MAPJ;AAQjB5C,UAAQ,EAAEkB,SAAS,CAACG,IARH;AASjBxB,OAAK,EAAEqB,SAAS,CAACG,IATA;AAUjBvB,gBAAc,EAAEoB,SAAS,CAACG,IAVT;;AAYjBZ,OAAK,EAAES,SAAS,CAACC;AAZA;;gBADfO,0BAgBkB;AACpB1B,UAAQ,EAAE,KADU;AAEpBH,OAAK,EAAE,KAFa;AAGpBC,gBAAc,EAAE,KAHI;AAIpBmC,kBAAgB,EAAE,IAJE;AAKpBQ,iBAAe,EAAE,2BAAM;AALH;;AA4ExB,SAASI,mBAAT,CAA6BC,KAA7B,EAAoC;MAC9B,OAAOA,KAAP,KAAiB,UAAU;WACtB;;;SAEF1D,WAAW,CAACR,oBAAZQ,CAAiChB,QAAjCgB,CAA0C0D,KAA1C1D;;;AAGT,SAASsD,iBAAT,CAA2B3D,KAA3B,EAAkCgE,QAAlC,EAA4CC,aAA5C,EAA2D;wBACjCjE,KAAK,CAACgE,QAAD;MAArBrD,KADiD,mBACjDA;MAAOiC,IAD0C,mBAC1CA;;MACX,CAACjC,KAAD,IAAU,CAACiC,MAAM;WACZ,IAAIvE,KAAJ,wBACW2F,QADX,0BACmCC,aADnC,eACqDD,QADrD;;;MAIL,CAACF,mBAAmB,CAACnD,KAAD,CAApB,IAA+B,CAACmD,mBAAmB,CAAClB,IAAD,GAAQ;WACtD,IAAIvE,KAAJ,wBACW2F,QADX,0BACmCC,aADnC,eACqDD,QADrD;;;MAILrD,KAAK,IAAIiC,MAAM;WACV,IAAIvE,KAAJ,wBACW2F,QADX,0BACmCC,aADnC,eACqDD,QADrD,yCAC4FA,QAD5F;;;;IClHLE;;;;;;;;;;;;;;;;4DAoCI;AACNC,iBAAW,EAAE,KADP;AAENpD,oBAAc,EAAE;AAFV;;wEA0BY,gBAA0C;UAAvCqD,eAAuC,QAAvCA;UAAiBC,eAAsB,QAAtBA;;UAClCnE,MAAKF,KAAL,CAAWiB,UAAU;;;;UAGnBqD,YAAY,GAAGC,UAAU,CAACH,eAAD,EAAkBC,eAAlB;UACzBG,YAAY,GAAGD,UAAU,CAACF,eAAD,EAAkBD,eAAlB;AAC/BI,kBAAY,CAACC,OAAbD,CAAqB,UAACvF,UAAD,EAAgB;cAC9Be,MAAM0E,SAASzF;AADtB;AAGAqF,kBAAY,CAACG,OAAbH,CAAqB,UAACrF,UAAD,EAAgB;cAC9Be,MAAM2E,SAAS1F;AADtB;;;0EAKoB,UAACwE,GAAD,EAAS;UACzB,CAACvD,MAAKF,KAAL,CAAW4E,mBAAmB;eAC1B;;;UAEHC,QAAQ,GAAG3E,MAAKF,KAAL,CAAW4E,iBAAX,CAA6BE,IAA7B,CAAkC,UAACC,EAAD;eAAQA,EAAE,CAACtB,GAAHsB,KAAWtB;AAArD;;aACVoB,QAAQ,IAAIA,QAAQ,CAAC5F;;;0EAGR,UAACA,UAAD,EAAgB;UAChC,CAACiB,MAAKF,KAAL,CAAW4E,mBAAmB;eAC1B;;;UAEHC,QAAQ,GAAG3E,MAAKF,KAAL,CAAW4E,iBAAX,CAA6BE,IAA7B,CAAkC,UAACC,EAAD;eAAQA,EAAE,CAAC9F,UAAH8F,KAAkB9F;AAA5D;;aACV4F,QAAQ,IAAIA,QAAQ,CAACpB;;;gEAGlB,UAACuB,KAAD,EAAW;;UAEjBA,KAAK,CAACC,OAAND,IAAiBA,KAAK,CAACE,OAAvBF,IAAkCA,KAAK,CAACG,UAAU;;;;UAGhDlG,UAAU,GAAGiB,MAAKkF,mBAAL,CAAyBJ,KAAK,CAACvB,GAA/B;;UACfxE,YAAY;cACTgB,gBAAgBhB;;;;8DAIf,UAAC+F,KAAD,EAAW;;;;;;UAMb/F,UAAU,GAAGiB,MAAKkF,mBAAL,CAAyBJ,KAAK,CAACvB,GAA/B;;UACfxE,YAAY;cACTkB,gBAAgBlB;;;;sEAIP,UAACA,UAAD,EAAgB;UAC5BiB,MAAKF,KAAL,CAAWiB,UAAU;;AADO;;;YAK3BjB,MAAMC,gBAAgBhB,YAAYiB,MAAKF,KAAL,CAAWwD;;;sEAGlC,UAACvE,UAAD,EAAgB;UAC5BiB,MAAKF,KAAL,CAAWiB,UAAU;;AADO;;;YAK3BjB,MAAMG,gBAAgBlB,YAAYiB,MAAKF,KAAL,CAAWwD;;;kEAGtC,YAAM;YACb6B,SAAS;AACZlB,mBAAW,EAAE;AADD;;;gEAKJ,YAAM;YACXkB,SAAS;AACZlB,mBAAW,EAAE;AADD;;;mEAKD,YAAM;YACdkB,SAAS;AACZtE,sBAAc,EAAE;AADJ;;;sEAKE,iBAA4C;UAAzC9B,UAAyC,SAAzCA;UAAYsE,QAA6B,SAA7BA;UAAUnE,YAAmB,SAAnBA;;UACnCkG,gBAAgB,GAAGpF,MAAKqF,mBAAL,CAAyBtG,UAAzB;;aAClBiB,MAAKF,KAAL,CAAW0D,eAAX,CAA2B;AAAE4B,wBAAgB,EAAhBA,gBAAF;AAAoBrG,kBAAU,EAAVA,UAApB;AAAgCsE,gBAAQ,EAARA,QAAhC;AAA0CnE,oBAAY,EAAZA;AAA1C,OAA3B;;;;;;;;wCA9GW;AAClBoG,YAAM,CAACC,gBAAPD,CAAwB,SAAxBA,EAAmC,KAAKE,SAAxCF;AACAA,YAAM,CAACC,gBAAPD,CAAwB,OAAxBA,EAAiC,KAAKG,OAAtCH;;;;2CAGqB;AACrBA,YAAM,CAACI,mBAAPJ,CAA2B,SAA3BA,EAAsC,KAAKE,SAA3CF;AACAA,YAAM,CAACI,mBAAPJ,CAA2B,OAA3BA,EAAoC,KAAKG,OAAzCH;;;;uCAGiBK,WAAWC,WAAW;UACnC,KAAK9F,KAAL,CAAWwD,WAAX,KAA2BqC,SAAS,CAACrC,aAAa;aAC/CuC,kBAAkB;AACrB3B,yBAAe,EAAEyB,SAAS,CAACrC,WAAVqC,IAAyB,EADrB;AAErBxB,yBAAe,EAAE,KAAKrE,KAAL,CAAWwD,WAAX,IAA0B;AAFtB;;;;;;;6BAqGlB;aAELrC;AACEG,aAAK,EAAE;AAAEI,eAAK,EAAE,MAAT;AAAiB0B,gBAAM,EAAE;AAAzB,SADT;AAEEzB,mBAAW,EAAE,KAAKA,WAFpB;AAGEC,iBAAS,EAAE,KAAKA,SAHlB;AAIEG,oBAAY,EAAE,KAAKA,YAJrB;uBAKc;AALd,SAOEZ,oBAACwB,QAAD;AACEjC,iBAAS,EAAE,KAAKV,KAAL,CAAWU,SADxB;AAEET,uBAAe,EAAE,KAAKA,eAFxB;AAGEE,uBAAe,EAAE,KAAKA,eAHxB;AAIEqD,mBAAW,EAAE,KAAKxD,KAAL,CAAWwD,WAJ1B;AAKEpC,iBAAS,EAAE,KAAKpB,KAAL,CAAWoB,SALxB;AAMEH,gBAAQ,EAAE,KAAKjB,KAAL,CAAWiB,QANvB;AAOES,aAAK,EAAE,KAAK1B,KAAL,CAAW0B,KAPpB;AAQEwB,wBAAgB,EAAE,KAAKlD,KAAL,CAAWkD,gBAR/B;AASEpC,aAAK,EAAE,KAAKkF,KAAL,CAAW7B,WATpB;AAUEpD,sBAAc,EAAE,KAAKiF,KAAL,CAAWjF,cAV7B;AAWE2C,uBAAe,EAAE,KAAKA;AAXxB,QAPF;;;;;EA5JwBvC,KAAK,CAACe;;gBAA9BgC,8BACe;AACjBxD,WAAS,EAAEyB,SAAS,CAACK,MAAVL,CAAiBE,UADX;AAEjBmB,aAAW,EAAErB,SAAS,CAACyB,OAAVzB,CAAkBA,SAAS,CAACC,MAAVD,CAAiBE,UAAnCF,EAA+CE,UAF3C;AAGjBqC,UAAQ,EAAEvC,SAAS,CAACI,IAAVJ,CAAeE,UAHR;AAIjBsC,UAAQ,EAAExC,SAAS,CAACI,IAAVJ,CAAeE,UAJR;AAKjBpC,iBAAe,EAAEkC,SAAS,CAACI,IAAVJ,CAAeE,UALf;AAMjBlC,iBAAe,EAAEgC,SAAS,CAACI,IAAVJ,CAAeE,UANf;AAOjBqB,iBAAe,EAAEvB,SAAS,CAACI,IAAVJ,CAAeE,UAPf;AAQjBjB,WAAS,EAAEe,SAAS,CAAC0B,MARJ;AASjB5C,UAAQ,EAAEkB,SAAS,CAACG,IATH;AAUjBZ,OAAK,EAAES,SAAS,CAACC,MAVA;AAWjBc,kBAAgB,EAAEf,SAAS,CAACC,MAXX;AAYjBwC,mBAAiB,EAAEzC,SAAS,CAACyB,OAAVzB,CACjBA,SAAS,CAAC8D,KAAV9D,CAAgB;AACdsB,OAAG,EAAEtB,SAAS,CAAC0B,MAAV1B,CAAiBE,UADR;AAEdpD,cAAU,EAAEkD,SAAS,CAACC,MAAVD,CAAiBE;AAFf,GAAhBF,CADiBA;AAZF;;gBADf+B,iCAqBkB;AACpBR,iBAAe,EAAE;QAAG4B,gBAAH,SAAGA;QAAkBrG,UAArB,SAAqBA;QAAYsE,QAAjC,SAAiCA;QAAUnE,YAA3C,SAA2CA;WAC1DkG,gBAAgB,GACdnE;AACEC,eAAS,EAAEC,UAAU,CAAC,uBAAD,EAA0B;yCACZkC,QADY;6CAERnE,YAFQ;0CAGX,CAACA;AAHU,OAA1B;AADvB,OAOGkG,gBAPH,CADc,GAUZ;;AAZc;;ICpBlBY;;;;;;;;;;;;;;;;4DAqBI;AACN1C,iBAAW,EAAEtD,MAAKF,KAAL,CAAWwD,WAAX,IAA0B;AADjC;;0EAiBc,UAACvE,UAAD,EAAgB;YAC/BoG,SAAS,UAACS,SAAD,EAAe;;;YAGvB5F,MAAKF,KAAL,CAAWC,iBAAiB;gBACzBD,MAAMC,gBAAgBhB,YAAY;AAAEmF,2BAAe,EAAE0B,SAAS,CAACtC;AAA7B;AAJd;;;YAQvBsC,SAAS,CAACtC,WAAVsC,CAAsBzG,QAAtByG,CAA+B7G,UAA/B6G,GAA4C;iBACvC;;;eAEF;AACLtC,qBAAW,EAAEsC,SAAS,CAACtC,WAAVsC,CAAsBK,MAAtBL,CAA6B7G,UAA7B6G;AADR;AAXT;;;0EAiBoB,UAAC7G,UAAD,EAAgB;YAC/BoG,SAAS,UAACS,SAAD,EAAe;;;YAGvB5F,MAAKF,KAAL,CAAWG,iBAAiB;gBACzBH,MAAMG,gBAAgBlB,YAAY;AAAEmF,2BAAe,EAAElE,MAAK8F,KAAL,CAAWxC;AAA9B;;;eAElC;AACLA,qBAAW,EAAEsC,SAAS,CAACtC,WAAVsC,CAAsBhG,MAAtBgG,CAA6B,UAAC1H,IAAD;mBAAUa,UAAU,KAAKb;AAAtD;AADR;AANT;;;;;;;;uCAhCiByH,WAAW;;;UAI1BA,SAAS,CAACrC,WAAVqC,KAA0B,KAAK7F,KAAL,CAAWwD,WAArCqC,IACA,KAAKG,KAAL,CAAWxC,WAAX,KAA2B,KAAKxD,KAAL,CAAWwD,aACtC;aACK6B,SAAS;AACZ7B,qBAAW,EAAE,KAAKxD,KAAL,CAAWwD,WAAX,IAA0B;AAD3B;;;;;6BAqCT;wBACkE,KAAKxD;UAAtEwD,WADD,eACCA;UAAavD,eADd,eACcA;UAAiBE,eAD/B,eAC+BA;UAAoBiG,UADnD;;aAGLjF,oBAAC+C,eAAD;AACEV,mBAAW,EAAE,KAAKwC,KAAL,CAAWxC,WAD1B;AAEEvD,uBAAe,EAAE,KAAKoG,mBAFxB;AAGElG,uBAAe,EAAE,KAAKmG;AAHxB,SAIMF,UAJN;;;;;EAxEcjF,KAAK,CAACe;;gBAApBgE,oBACe;AACjBxF,WAAS,EAAEyB,SAAS,CAACK,MAAVL,CAAiBE,UADX;AAEjBmB,aAAW,EAAErB,SAAS,CAACyB,OAAVzB,CAAkBA,SAAS,CAACC,MAAVD,CAAiBE,UAAnCF,CAFI;AAGjBuC,UAAQ,EAAEvC,SAAS,CAACI,IAAVJ,CAAeE,UAHR;AAIjBsC,UAAQ,EAAExC,SAAS,CAACI,IAAVJ,CAAeE,UAJR;AAKjBpC,iBAAe,EAAEkC,SAAS,CAACI,IALV;AAMjBpC,iBAAe,EAAEgC,SAAS,CAACI,IANV;AAOjBmB,iBAAe,EAAEvB,SAAS,CAACI,IAPV;AAQjBnB,WAAS,EAAEe,SAAS,CAAC0B,MARJ;AASjB5C,UAAQ,EAAEkB,SAAS,CAACG,IATH;AAUjBZ,OAAK,EAAES,SAAS,CAACC,MAVA;AAWjBc,kBAAgB,EAAEf,SAAS,CAACC,MAXX;AAYjBwC,mBAAiB,EAAEzC,SAAS,CAACyB,OAAVzB,CACjBA,SAAS,CAAC8D,KAAV9D,CAAgB;AACdsB,OAAG,EAAEtB,SAAS,CAAC0B,MAAV1B,CAAiBE,UADR;AAEdpD,cAAU,EAAEkD,SAAS,CAACC,MAAVD,CAAiBE;AAFf,GAAhBF,CADiBA;AAZF;;ACNrB,SAASoE,uBAAT,OAA0E;MAAvCC,SAAuC,QAAvCA;MAAWC,QAA4B,QAA5BA;MAAUC,cAAkB,QAAlBA;MAClDC,iBAAiB,GAAGH;MACpBI,eAAe,GAAG;MAClBhC,iBAAiB,GAAG;;;AAItBgC,iBAAe,GAAGF,cAAc,CAAC5D,MAAjC8D;AAEAD,mBAAiB,IAAIF,UACrB;QACMhD,GAAG,GAAGiD,cAAc,CAACE,eAAD;;gCACDvG,WAAW,CAACV,aAAZU,CAA0BsG,iBAA1BtG;QAAjBjB,YAFR,yBAEQA;;QACJA,cAAc;AAChBwF,uBAAiB,CAACiC,IAAlBjC,CAAuB;AACrBnB,WAAG,EAAEA,GAAG,CAACqD,IADY;AAErB7H,kBAAU,EAAE0H;AAFS,OAAvB/B;AADF,WAKO;AACLA,uBAAiB,CAACiC,IAAlBjC,CAAuB;AACrBnB,WAAG,EAAEA,GAAG,CAACsD,OADY;AAErB9H,kBAAU,EAAE0H;AAFS,OAAvB/B;AAIAgC,qBAAe,IAAI,CAAnBA;;;AAEFD,qBAAiB,IAAI,CAArBA;;;SAEK/B;;;AAGT,wBAAe;AACboC,QAAM,EAAET,uBADK;;AAGbU,YAAU,EAAE,CACV;AAAEF,WAAO,EAAE,GAAX;AAAgBD,QAAI,EAAE,GAAtB;AAA2BI,SAAK,EAAE;AAAlC,GADU,EAEV;AAAEH,WAAO,EAAE,GAAX;AAAgBD,QAAI,EAAE,GAAtB;AAA2BI,SAAK,EAAE;AAAlC,GAFU,EAGV;AAAEH,WAAO,EAAE,GAAX;AAAgBD,QAAI,EAAE,GAAtB;AAA2BI,SAAK,EAAE;AAAlC,GAHU,EAIV;AAAEH,WAAO,EAAE,GAAX;AAAgBD,QAAI,EAAE,GAAtB;AAA2BI,SAAK,EAAE;AAAlC,GAJU,EAKV;AAAEH,WAAO,EAAE,GAAX;AAAgBD,QAAI,EAAE,GAAtB;AAA2BI,SAAK,EAAE;AAAlC,GALU,EAMV;AAAEH,WAAO,EAAE,GAAX;AAAgBD,QAAI,EAAE,GAAtB;AAA2BI,SAAK,EAAE;AAAlC,GANU,EAOV;AAAEH,WAAO,EAAE,GAAX;AAAgBD,QAAI,EAAE,GAAtB;AAA2BI,SAAK,EAAE;AAAlC,GAPU,EAQV;AAAEH,WAAO,EAAE,GAAX;AAAgBD,QAAI,EAAE,GAAtB;AAA2BI,SAAK,EAAE;AAAlC,GARU,EASV;AAAEH,WAAO,EAAE,GAAX;AAAgBD,QAAI,EAAE,GAAtB;AAA2BI,SAAK,EAAE;AAAlC,GATU,EAUV;AAAEH,WAAO,EAAE,GAAX;AAAgBD,QAAI,EAAE,GAAtB;AAA2BI,SAAK,EAAE;AAAlC,GAVU,CAHC;AAebC,UAAQ,EAAE,CACR;AAAEJ,WAAO,EAAE,GAAX;AAAgBD,QAAI,EAAE,GAAtB;AAA2BI,SAAK,EAAE;AAAlC,GADQ,EAER;AAAEH,WAAO,EAAE,GAAX;AAAgBD,QAAI,EAAE,GAAtB;AAA2BI,SAAK,EAAE;AAAlC,GAFQ,EAGR;AAAEH,WAAO,EAAE,GAAX;AAAgBD,QAAI,EAAE,GAAtB;AAA2BI,SAAK,EAAE;AAAlC,GAHQ,EAIR;AAAEH,WAAO,EAAE,GAAX;AAAgBD,QAAI,EAAE,GAAtB;AAA2BI,SAAK,EAAE;AAAlC,GAJQ,EAKR;AAAEH,WAAO,EAAE,GAAX;AAAgBD,QAAI,EAAE,GAAtB;AAA2BI,SAAK,EAAE;AAAlC,GALQ,EAMR;AAAEH,WAAO,EAAE,GAAX;AAAgBD,QAAI,EAAE,GAAtB;AAA2BI,SAAK,EAAE;AAAlC,GANQ,EAOR;AAAEH,WAAO,EAAE,GAAX;AAAgBD,QAAI,EAAE,GAAtB;AAA2BI,SAAK,EAAE;AAAlC,GAPQ,EAQR;AAAEH,WAAO,EAAE,GAAX;AAAgBD,QAAI,EAAE,GAAtB;AAA2BI,SAAK,EAAE;AAAlC,GARQ,EASR;AAAEH,WAAO,EAAE,GAAX;AAAgBD,QAAI,EAAE,GAAtB;AAA2BI,SAAK,EAAE;AAAlC,GATQ,EAUR;AAAEH,WAAO,EAAE,GAAX;AAAgBD,QAAI,EAAE,GAAtB;AAA2BI,SAAK,EAAE;AAAlC,GAVQ,EAWR;AAAEH,WAAO,EAAE,GAAX;AAAgBD,QAAI,EAAE,GAAtB;AAA2BI,SAAK,EAAE;AAAlC,GAXQ,CAfG;AA4BbE,YAAU,EAAE,CACV;AAAEL,WAAO,EAAE,GAAX;AAAgBD,QAAI,EAAE,GAAtB;AAA2BI,SAAK,EAAE;AAAlC,GADU,EAEV;AAAEH,WAAO,EAAE,GAAX;AAAgBD,QAAI,EAAE,GAAtB;AAA2BI,SAAK,EAAE;AAAlC,GAFU,EAGV;AAAEH,WAAO,EAAE,GAAX;AAAgBD,QAAI,EAAE,GAAtB;AAA2BI,SAAK,EAAE;AAAlC,GAHU,EAIV;AAAEH,WAAO,EAAE,GAAX;AAAgBD,QAAI,EAAE,GAAtB;AAA2BI,SAAK,EAAE;AAAlC,GAJU,EAKV;AAAEH,WAAO,EAAE,GAAX;AAAgBD,QAAI,EAAE,GAAtB;AAA2BI,SAAK,EAAE;AAAlC,GALU,EAMV;AAAEH,WAAO,EAAE,GAAX;AAAgBD,QAAI,EAAE,GAAtB;AAA2BI,SAAK,EAAE;AAAlC,GANU,EAOV;AAAEH,WAAO,EAAE,GAAX;AAAgBD,QAAI,EAAE,GAAtB;AAA2BI,SAAK,EAAE;AAAlC,GAPU,EAQV;AAAEH,WAAO,EAAE,GAAX;AAAgBD,QAAI,EAAE,GAAtB;AAA2BI,SAAK,EAAE;AAAlC,GARU,EASV;AAAEH,WAAO,EAAE,GAAX;AAAgBD,QAAI,EAAE,GAAtB;AAA2BI,SAAK,EAAE;AAAlC,GATU,EAUV;AAAEH,WAAO,EAAE,GAAX;AAAgBD,QAAI,EAAE,GAAtB;AAA2BI,SAAK,EAAE;AAAlC,GAVU,EAWV;AAAEH,WAAO,EAAE,GAAX;AAAgBD,QAAI,EAAE,GAAtB;AAA2BI,SAAK,EAAE;AAAlC,GAXU;AA5BC,CAAf","names":["SORTED_PITCHES","ACCIDENTAL_PITCHES","PITCH_INDEXES","C","Db","D","Eb","E","F","Gb","G","Ab","A","Bb","B","MIDI_NUMBER_C0","MIN_MIDI_NUMBER","MAX_MIDI_NUMBER","NOTE_REGEX","NOTES_IN_OCTAVE","fromNote","note","Error","match","exec","toLowerCase","letter","accidental","octave","pitchName","toUpperCase","pitchIndex","parseInt","buildMidiNumberAttributes","midiNumber","Math","floor","isAccidental","includes","buildMidiNumberAttributesCache","range","reduce","cache","midiNumberAttributesCache","getAttributes","attrs","NATURAL_MIDI_NUMBERS","filter","Key","props","onPlayNoteInput","_this","onStopNoteInput","OCTAVE_WIDTH","MidiNumbers","pitchPosition","pitchPositions","octavePosition","getAbsoluteKeyPosition","noteRange","first","naturalKeyWidth","accidentalWidthRatio","gliss","useTouchEvents","active","disabled","children","React","className","classNames","style","left","ratioToPercentage","getRelativeKeyPosition","width","onMouseDown","onMouseUp","onMouseEnter","onMouseLeave","onTouchStart","onTouchCancel","onTouchEnd","Component","PropTypes","number","isRequired","bool","func","object","node","ratio","Keyboard","last","getMidiNumbers","length","getNaturalKeyCount","keyWidth","getNaturalKeyWidth","keyWidthToHeight","getWidth","height","getHeight","map","isActive","activeNotes","key","renderNoteLabel","noteRangePropType","arrayOf","string","isNaturalMidiNumber","value","propName","componentName","ControlledPiano","isMouseDown","prevActiveNotes","nextActiveNotes","notesStopped","difference","notesStarted","forEach","playNote","stopNote","keyboardShortcuts","shortcut","find","sh","event","ctrlKey","metaKey","shiftKey","getMidiNumberForKey","setState","keyboardShortcut","getKeyForMidiNumber","window","addEventListener","onKeyDown","onKeyUp","removeEventListener","prevProps","prevState","handleNoteChanges","state","shape","Piano","concat","otherProps","handlePlayNoteInput","handleStopNoteInput","createKeyboardShortcuts","firstNote","lastNote","keyboardConfig","currentMidiNumber","naturalKeyIndex","push","flat","natural","create","BOTTOM_ROW","sharp","HOME_ROW","QWERTY_ROW"],"sources":["/Users/joshuachai/Documents/GitHub/pitch-class-set-analyzer/node_modules/react-piano/src/MidiNumbers.js","/Users/joshuachai/Documents/GitHub/pitch-class-set-analyzer/node_modules/react-piano/src/Key.js","/Users/joshuachai/Documents/GitHub/pitch-class-set-analyzer/node_modules/react-piano/src/Keyboard.js","/Users/joshuachai/Documents/GitHub/pitch-class-set-analyzer/node_modules/react-piano/src/ControlledPiano.js","/Users/joshuachai/Documents/GitHub/pitch-class-set-analyzer/node_modules/react-piano/src/Piano.js","/Users/joshuachai/Documents/GitHub/pitch-class-set-analyzer/node_modules/react-piano/src/KeyboardShortcuts.js"],"sourcesContent":["import range from 'just-range';\n\nconst SORTED_PITCHES = ['C', 'Db', 'D', 'Eb', 'E', 'F', 'Gb', 'G', 'Ab', 'A', 'Bb', 'B'];\nconst ACCIDENTAL_PITCHES = ['Db', 'Eb', 'Gb', 'Ab', 'Bb'];\nconst PITCH_INDEXES = {\n  C: 0,\n  'C#': 1,\n  Db: 1,\n  D: 2,\n  'D#': 3,\n  Eb: 3,\n  E: 4,\n  F: 5,\n  'F#': 6,\n  Gb: 6,\n  G: 7,\n  'G#': 8,\n  Ab: 8,\n  A: 9,\n  'A#': 10,\n  Bb: 10,\n  B: 11,\n};\nconst MIDI_NUMBER_C0 = 12;\nconst MIN_MIDI_NUMBER = MIDI_NUMBER_C0;\nconst MAX_MIDI_NUMBER = 127;\nconst NOTE_REGEX = /([a-g])([#b]?)(\\d+)/;\nconst NOTES_IN_OCTAVE = 12;\n\n// Converts string notes in scientific pitch notation to a MIDI number, or null.\n//\n// Example: \"c#0\" => 13, \"eb5\" => 75, \"abc\" => null\n//\n// References:\n// - http://www.flutopedia.com/octave_notation.htm\n// - https://github.com/danigb/tonal/blob/master/packages/note/index.js\nfunction fromNote(note) {\n  if (!note) {\n    throw Error('Invalid note argument');\n  }\n  const match = NOTE_REGEX.exec(note.toLowerCase());\n  if (!match) {\n    throw Error('Invalid note argument');\n  }\n  const [, letter, accidental, octave] = match;\n  const pitchName = `${letter.toUpperCase()}${accidental}`;\n  const pitchIndex = PITCH_INDEXES[pitchName];\n  if (pitchIndex == null) {\n    throw Error('Invalid note argument');\n  }\n  return MIDI_NUMBER_C0 + pitchIndex + NOTES_IN_OCTAVE * parseInt(octave, 10);\n}\n\n//\n// Build cache for getAttributes\n//\nfunction buildMidiNumberAttributes(midiNumber) {\n  const pitchIndex = (midiNumber - MIDI_NUMBER_C0) % NOTES_IN_OCTAVE;\n  const octave = Math.floor((midiNumber - MIDI_NUMBER_C0) / NOTES_IN_OCTAVE);\n  const pitchName = SORTED_PITCHES[pitchIndex];\n  return {\n    note: `${pitchName}${octave}`,\n    pitchName,\n    octave,\n    midiNumber,\n    isAccidental: ACCIDENTAL_PITCHES.includes(pitchName),\n  };\n}\n\nfunction buildMidiNumberAttributesCache() {\n  return range(MIN_MIDI_NUMBER, MAX_MIDI_NUMBER + 1).reduce((cache, midiNumber) => {\n    cache[midiNumber] = buildMidiNumberAttributes(midiNumber);\n    return cache;\n  }, {});\n}\n\nconst midiNumberAttributesCache = buildMidiNumberAttributesCache();\n\n// Returns an object containing various attributes for a given MIDI number.\n// Throws error for invalid midiNumbers.\nfunction getAttributes(midiNumber) {\n  const attrs = midiNumberAttributesCache[midiNumber];\n  if (!attrs) {\n    throw Error('Invalid MIDI number');\n  }\n  return attrs;\n}\n\n// Returns all MIDI numbers corresponding to natural notes, e.g. C and not C# or Bb.\nconst NATURAL_MIDI_NUMBERS = range(MIN_MIDI_NUMBER, MAX_MIDI_NUMBER + 1).filter(\n  (midiNumber) => !getAttributes(midiNumber).isAccidental,\n);\n\nexport default {\n  fromNote,\n  getAttributes,\n  MIN_MIDI_NUMBER,\n  MAX_MIDI_NUMBER,\n  NATURAL_MIDI_NUMBERS,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nimport MidiNumbers from './MidiNumbers';\n\nclass Key extends React.Component {\n  static propTypes = {\n    midiNumber: PropTypes.number.isRequired,\n    naturalKeyWidth: PropTypes.number.isRequired, // Width as a ratio between 0 and 1\n    gliss: PropTypes.bool.isRequired,\n    useTouchEvents: PropTypes.bool.isRequired,\n    accidental: PropTypes.bool.isRequired,\n    active: PropTypes.bool.isRequired,\n    disabled: PropTypes.bool.isRequired,\n    onPlayNoteInput: PropTypes.func.isRequired,\n    onStopNoteInput: PropTypes.func.isRequired,\n    accidentalWidthRatio: PropTypes.number.isRequired,\n    pitchPositions: PropTypes.object.isRequired,\n    children: PropTypes.node,\n  };\n\n  static defaultProps = {\n    accidentalWidthRatio: 0.65,\n    pitchPositions: {\n      C: 0,\n      Db: 0.55,\n      D: 1,\n      Eb: 1.8,\n      E: 2,\n      F: 3,\n      Gb: 3.5,\n      G: 4,\n      Ab: 4.7,\n      A: 5,\n      Bb: 5.85,\n      B: 6,\n    },\n  };\n\n  onPlayNoteInput = () => {\n    this.props.onPlayNoteInput(this.props.midiNumber);\n  };\n\n  onStopNoteInput = () => {\n    this.props.onStopNoteInput(this.props.midiNumber);\n  };\n\n  // Key position is represented by the number of natural key widths from the left\n  getAbsoluteKeyPosition(midiNumber) {\n    const OCTAVE_WIDTH = 7;\n    const { octave, pitchName } = MidiNumbers.getAttributes(midiNumber);\n    const pitchPosition = this.props.pitchPositions[pitchName];\n    const octavePosition = OCTAVE_WIDTH * octave;\n    return pitchPosition + octavePosition;\n  }\n\n  getRelativeKeyPosition(midiNumber) {\n    return (\n      this.getAbsoluteKeyPosition(midiNumber) -\n      this.getAbsoluteKeyPosition(this.props.noteRange.first)\n    );\n  }\n\n  render() {\n    const {\n      naturalKeyWidth,\n      accidentalWidthRatio,\n      midiNumber,\n      gliss,\n      useTouchEvents,\n      accidental,\n      active,\n      disabled,\n      children,\n    } = this.props;\n\n    // Need to conditionally include/exclude handlers based on useTouchEvents,\n    // because otherwise mobile taps double fire events.\n    return (\n      <div\n        className={classNames('ReactPiano__Key', {\n          'ReactPiano__Key--accidental': accidental,\n          'ReactPiano__Key--natural': !accidental,\n          'ReactPiano__Key--disabled': disabled,\n          'ReactPiano__Key--active': active,\n        })}\n        style={{\n          left: ratioToPercentage(this.getRelativeKeyPosition(midiNumber) * naturalKeyWidth),\n          width: ratioToPercentage(\n            accidental ? accidentalWidthRatio * naturalKeyWidth : naturalKeyWidth,\n          ),\n        }}\n        onMouseDown={useTouchEvents ? null : this.onPlayNoteInput}\n        onMouseUp={useTouchEvents ? null : this.onStopNoteInput}\n        onMouseEnter={gliss ? this.onPlayNoteInput : null}\n        onMouseLeave={this.onStopNoteInput}\n        onTouchStart={useTouchEvents ? this.onPlayNoteInput : null}\n        onTouchCancel={useTouchEvents ? this.onStopNoteInput : null}\n        onTouchEnd={useTouchEvents ? this.onStopNoteInput : null}\n      >\n        <div className=\"ReactPiano__NoteLabelContainer\">{children}</div>\n      </div>\n    );\n  }\n}\n\nfunction ratioToPercentage(ratio) {\n  return `${ratio * 100}%`;\n}\n\nexport default Key;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport range from 'just-range';\nimport classNames from 'classnames';\n\nimport Key from './Key';\nimport MidiNumbers from './MidiNumbers';\n\nclass Keyboard extends React.Component {\n  static propTypes = {\n    noteRange: noteRangePropType,\n    activeNotes: PropTypes.arrayOf(PropTypes.number),\n    onPlayNoteInput: PropTypes.func.isRequired,\n    onStopNoteInput: PropTypes.func.isRequired,\n    renderNoteLabel: PropTypes.func.isRequired,\n    keyWidthToHeight: PropTypes.number.isRequired,\n    className: PropTypes.string,\n    disabled: PropTypes.bool,\n    gliss: PropTypes.bool,\n    useTouchEvents: PropTypes.bool,\n    // If width is not provided, must have fixed width and height in parent container\n    width: PropTypes.number,\n  };\n\n  static defaultProps = {\n    disabled: false,\n    gliss: false,\n    useTouchEvents: false,\n    keyWidthToHeight: 0.33,\n    renderNoteLabel: () => {},\n  };\n\n  // Range of midi numbers on keyboard\n  getMidiNumbers() {\n    return range(this.props.noteRange.first, this.props.noteRange.last + 1);\n  }\n\n  getNaturalKeyCount() {\n    return this.getMidiNumbers().filter((number) => {\n      const { isAccidental } = MidiNumbers.getAttributes(number);\n      return !isAccidental;\n    }).length;\n  }\n\n  // Returns a ratio between 0 and 1\n  getNaturalKeyWidth() {\n    return 1 / this.getNaturalKeyCount();\n  }\n\n  getWidth() {\n    return this.props.width ? this.props.width : '100%';\n  }\n\n  getHeight() {\n    if (!this.props.width) {\n      return '100%';\n    }\n    const keyWidth = this.props.width * this.getNaturalKeyWidth();\n    return `${keyWidth / this.props.keyWidthToHeight}px`;\n  }\n\n  render() {\n    const naturalKeyWidth = this.getNaturalKeyWidth();\n    return (\n      <div\n        className={classNames('ReactPiano__Keyboard', this.props.className)}\n        style={{ width: this.getWidth(), height: this.getHeight() }}\n      >\n        {this.getMidiNumbers().map((midiNumber) => {\n          const { note, isAccidental } = MidiNumbers.getAttributes(midiNumber);\n          const isActive = !this.props.disabled && this.props.activeNotes.includes(midiNumber);\n          return (\n            <Key\n              naturalKeyWidth={naturalKeyWidth}\n              midiNumber={midiNumber}\n              noteRange={this.props.noteRange}\n              active={isActive}\n              accidental={isAccidental}\n              disabled={this.props.disabled}\n              onPlayNoteInput={this.props.onPlayNoteInput}\n              onStopNoteInput={this.props.onStopNoteInput}\n              gliss={this.props.gliss}\n              useTouchEvents={this.props.useTouchEvents}\n              key={midiNumber}\n            >\n              {this.props.disabled\n                ? null\n                : this.props.renderNoteLabel({\n                    isActive,\n                    isAccidental,\n                    midiNumber,\n                  })}\n            </Key>\n          );\n        })}\n      </div>\n    );\n  }\n}\n\nfunction isNaturalMidiNumber(value) {\n  if (typeof value !== 'number') {\n    return false;\n  }\n  return MidiNumbers.NATURAL_MIDI_NUMBERS.includes(value);\n}\n\nfunction noteRangePropType(props, propName, componentName) {\n  const { first, last } = props[propName];\n  if (!first || !last) {\n    return new Error(\n      `Invalid prop ${propName} supplied to ${componentName}. ${propName} must be an object with .first and .last values.`,\n    );\n  }\n  if (!isNaturalMidiNumber(first) || !isNaturalMidiNumber(last)) {\n    return new Error(\n      `Invalid prop ${propName} supplied to ${componentName}. ${propName} values must be valid MIDI numbers, and should not be accidentals (sharp or flat notes).`,\n    );\n  }\n  if (first >= last) {\n    return new Error(\n      `Invalid prop ${propName} supplied to ${componentName}. ${propName}.first must be smaller than ${propName}.last.`,\n    );\n  }\n}\n\nexport default Keyboard;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport difference from 'lodash.difference';\nimport Keyboard from './Keyboard';\n\nclass ControlledPiano extends React.Component {\n  static propTypes = {\n    noteRange: PropTypes.object.isRequired,\n    activeNotes: PropTypes.arrayOf(PropTypes.number.isRequired).isRequired,\n    playNote: PropTypes.func.isRequired,\n    stopNote: PropTypes.func.isRequired,\n    onPlayNoteInput: PropTypes.func.isRequired,\n    onStopNoteInput: PropTypes.func.isRequired,\n    renderNoteLabel: PropTypes.func.isRequired,\n    className: PropTypes.string,\n    disabled: PropTypes.bool,\n    width: PropTypes.number,\n    keyWidthToHeight: PropTypes.number,\n    keyboardShortcuts: PropTypes.arrayOf(\n      PropTypes.shape({\n        key: PropTypes.string.isRequired,\n        midiNumber: PropTypes.number.isRequired,\n      }),\n    ),\n  };\n\n  static defaultProps = {\n    renderNoteLabel: ({ keyboardShortcut, midiNumber, isActive, isAccidental }) =>\n      keyboardShortcut ? (\n        <div\n          className={classNames('ReactPiano__NoteLabel', {\n            'ReactPiano__NoteLabel--active': isActive,\n            'ReactPiano__NoteLabel--accidental': isAccidental,\n            'ReactPiano__NoteLabel--natural': !isAccidental,\n          })}\n        >\n          {keyboardShortcut}\n        </div>\n      ) : null,\n  };\n\n  state = {\n    isMouseDown: false,\n    useTouchEvents: false,\n  };\n\n  componentDidMount() {\n    window.addEventListener('keydown', this.onKeyDown);\n    window.addEventListener('keyup', this.onKeyUp);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('keydown', this.onKeyDown);\n    window.removeEventListener('keyup', this.onKeyUp);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.props.activeNotes !== prevProps.activeNotes) {\n      this.handleNoteChanges({\n        prevActiveNotes: prevProps.activeNotes || [],\n        nextActiveNotes: this.props.activeNotes || [],\n      });\n    }\n  }\n\n  // This function is responsible for diff'ing activeNotes\n  // and playing or stopping notes accordingly.\n  handleNoteChanges = ({ prevActiveNotes, nextActiveNotes }) => {\n    if (this.props.disabled) {\n      return;\n    }\n    const notesStopped = difference(prevActiveNotes, nextActiveNotes);\n    const notesStarted = difference(nextActiveNotes, prevActiveNotes);\n    notesStarted.forEach((midiNumber) => {\n      this.props.playNote(midiNumber);\n    });\n    notesStopped.forEach((midiNumber) => {\n      this.props.stopNote(midiNumber);\n    });\n  };\n\n  getMidiNumberForKey = (key) => {\n    if (!this.props.keyboardShortcuts) {\n      return null;\n    }\n    const shortcut = this.props.keyboardShortcuts.find((sh) => sh.key === key);\n    return shortcut && shortcut.midiNumber;\n  };\n\n  getKeyForMidiNumber = (midiNumber) => {\n    if (!this.props.keyboardShortcuts) {\n      return null;\n    }\n    const shortcut = this.props.keyboardShortcuts.find((sh) => sh.midiNumber === midiNumber);\n    return shortcut && shortcut.key;\n  };\n\n  onKeyDown = (event) => {\n    // Don't conflict with existing combinations like ctrl + t\n    if (event.ctrlKey || event.metaKey || event.shiftKey) {\n      return;\n    }\n    const midiNumber = this.getMidiNumberForKey(event.key);\n    if (midiNumber) {\n      this.onPlayNoteInput(midiNumber);\n    }\n  };\n\n  onKeyUp = (event) => {\n    // This *should* also check for event.ctrlKey || event.metaKey || event.ShiftKey like onKeyDown does,\n    // but at least on Mac Chrome, when mashing down many alphanumeric keystrokes at once,\n    // ctrlKey is fired unexpectedly, which would cause onStopNote to NOT be fired, which causes problematic\n    // lingering notes. Since it's fairly safe to call onStopNote even when not necessary,\n    // the ctrl/meta/shift check is removed to fix that issue.\n    const midiNumber = this.getMidiNumberForKey(event.key);\n    if (midiNumber) {\n      this.onStopNoteInput(midiNumber);\n    }\n  };\n\n  onPlayNoteInput = (midiNumber) => {\n    if (this.props.disabled) {\n      return;\n    }\n    // Pass in previous activeNotes for recording functionality\n    this.props.onPlayNoteInput(midiNumber, this.props.activeNotes);\n  };\n\n  onStopNoteInput = (midiNumber) => {\n    if (this.props.disabled) {\n      return;\n    }\n    // Pass in previous activeNotes for recording functionality\n    this.props.onStopNoteInput(midiNumber, this.props.activeNotes);\n  };\n\n  onMouseDown = () => {\n    this.setState({\n      isMouseDown: true,\n    });\n  };\n\n  onMouseUp = () => {\n    this.setState({\n      isMouseDown: false,\n    });\n  };\n\n  onTouchStart = () => {\n    this.setState({\n      useTouchEvents: true,\n    });\n  };\n\n  renderNoteLabel = ({ midiNumber, isActive, isAccidental }) => {\n    const keyboardShortcut = this.getKeyForMidiNumber(midiNumber);\n    return this.props.renderNoteLabel({ keyboardShortcut, midiNumber, isActive, isAccidental });\n  };\n\n  render() {\n    return (\n      <div\n        style={{ width: '100%', height: '100%' }}\n        onMouseDown={this.onMouseDown}\n        onMouseUp={this.onMouseUp}\n        onTouchStart={this.onTouchStart}\n        data-testid=\"container\"\n      >\n        <Keyboard\n          noteRange={this.props.noteRange}\n          onPlayNoteInput={this.onPlayNoteInput}\n          onStopNoteInput={this.onStopNoteInput}\n          activeNotes={this.props.activeNotes}\n          className={this.props.className}\n          disabled={this.props.disabled}\n          width={this.props.width}\n          keyWidthToHeight={this.props.keyWidthToHeight}\n          gliss={this.state.isMouseDown}\n          useTouchEvents={this.state.useTouchEvents}\n          renderNoteLabel={this.renderNoteLabel}\n        />\n      </div>\n    );\n  }\n}\n\nexport default ControlledPiano;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport difference from 'lodash.difference';\nimport ControlledPiano from './ControlledPiano';\nimport Keyboard from './Keyboard';\n\nclass Piano extends React.Component {\n  static propTypes = {\n    noteRange: PropTypes.object.isRequired,\n    activeNotes: PropTypes.arrayOf(PropTypes.number.isRequired),\n    playNote: PropTypes.func.isRequired,\n    stopNote: PropTypes.func.isRequired,\n    onPlayNoteInput: PropTypes.func,\n    onStopNoteInput: PropTypes.func,\n    renderNoteLabel: PropTypes.func,\n    className: PropTypes.string,\n    disabled: PropTypes.bool,\n    width: PropTypes.number,\n    keyWidthToHeight: PropTypes.number,\n    keyboardShortcuts: PropTypes.arrayOf(\n      PropTypes.shape({\n        key: PropTypes.string.isRequired,\n        midiNumber: PropTypes.number.isRequired,\n      }),\n    ),\n  };\n\n  state = {\n    activeNotes: this.props.activeNotes || [],\n  };\n\n  componentDidUpdate(prevProps) {\n    // Make activeNotes \"controllable\" by using internal\n    // state by default, but allowing prop overrides.\n    if (\n      prevProps.activeNotes !== this.props.activeNotes &&\n      this.state.activeNotes !== this.props.activeNotes\n    ) {\n      this.setState({\n        activeNotes: this.props.activeNotes || [],\n      });\n    }\n  }\n\n  handlePlayNoteInput = (midiNumber) => {\n    this.setState((prevState) => {\n      // Need to be handled inside setState in order to set prevActiveNotes without\n      // race conditions.\n      if (this.props.onPlayNoteInput) {\n        this.props.onPlayNoteInput(midiNumber, { prevActiveNotes: prevState.activeNotes });\n      }\n\n      // Don't append note to activeNotes if it's already present\n      if (prevState.activeNotes.includes(midiNumber)) {\n        return null;\n      }\n      return {\n        activeNotes: prevState.activeNotes.concat(midiNumber),\n      };\n    });\n  };\n\n  handleStopNoteInput = (midiNumber) => {\n    this.setState((prevState) => {\n      // Need to be handled inside setState in order to set prevActiveNotes without\n      // race conditions.\n      if (this.props.onStopNoteInput) {\n        this.props.onStopNoteInput(midiNumber, { prevActiveNotes: this.state.activeNotes });\n      }\n      return {\n        activeNotes: prevState.activeNotes.filter((note) => midiNumber !== note),\n      };\n    });\n  };\n\n  render() {\n    const { activeNotes, onPlayNoteInput, onStopNoteInput, ...otherProps } = this.props;\n    return (\n      <ControlledPiano\n        activeNotes={this.state.activeNotes}\n        onPlayNoteInput={this.handlePlayNoteInput}\n        onStopNoteInput={this.handleStopNoteInput}\n        {...otherProps}\n      />\n    );\n  }\n}\n\nexport default Piano;\n","import MidiNumbers from './MidiNumbers';\n\nfunction createKeyboardShortcuts({ firstNote, lastNote, keyboardConfig }) {\n  let currentMidiNumber = firstNote;\n  let naturalKeyIndex = 0;\n  let keyboardShortcuts = [];\n\n  while (\n    // There are still keys to be assigned\n    naturalKeyIndex < keyboardConfig.length &&\n    // Note to be assigned does not surpass range\n    currentMidiNumber <= lastNote\n  ) {\n    const key = keyboardConfig[naturalKeyIndex];\n    const { isAccidental } = MidiNumbers.getAttributes(currentMidiNumber);\n    if (isAccidental) {\n      keyboardShortcuts.push({\n        key: key.flat,\n        midiNumber: currentMidiNumber,\n      });\n    } else {\n      keyboardShortcuts.push({\n        key: key.natural,\n        midiNumber: currentMidiNumber,\n      });\n      naturalKeyIndex += 1;\n    }\n    currentMidiNumber += 1;\n  }\n  return keyboardShortcuts;\n}\n\nexport default {\n  create: createKeyboardShortcuts,\n  // Preset configurations\n  BOTTOM_ROW: [\n    { natural: 'z', flat: 'a', sharp: 's' },\n    { natural: 'x', flat: 's', sharp: 'd' },\n    { natural: 'c', flat: 'd', sharp: 'f' },\n    { natural: 'v', flat: 'f', sharp: 'g' },\n    { natural: 'b', flat: 'g', sharp: 'h' },\n    { natural: 'n', flat: 'h', sharp: 'j' },\n    { natural: 'm', flat: 'j', sharp: 'k' },\n    { natural: ',', flat: 'k', sharp: 'l' },\n    { natural: '.', flat: 'l', sharp: ';' },\n    { natural: '/', flat: ';', sharp: \"'\" },\n  ],\n  HOME_ROW: [\n    { natural: 'a', flat: 'q', sharp: 'w' },\n    { natural: 's', flat: 'w', sharp: 'e' },\n    { natural: 'd', flat: 'e', sharp: 'r' },\n    { natural: 'f', flat: 'r', sharp: 't' },\n    { natural: 'g', flat: 't', sharp: 'y' },\n    { natural: 'h', flat: 'y', sharp: 'u' },\n    { natural: 'j', flat: 'u', sharp: 'i' },\n    { natural: 'k', flat: 'i', sharp: 'o' },\n    { natural: 'l', flat: 'o', sharp: 'p' },\n    { natural: ';', flat: 'p', sharp: '[' },\n    { natural: \"'\", flat: '[', sharp: ']' },\n  ],\n  QWERTY_ROW: [\n    { natural: 'q', flat: '1', sharp: '2' },\n    { natural: 'w', flat: '2', sharp: '3' },\n    { natural: 'e', flat: '3', sharp: '4' },\n    { natural: 'r', flat: '4', sharp: '5' },\n    { natural: 't', flat: '5', sharp: '6' },\n    { natural: 'y', flat: '6', sharp: '7' },\n    { natural: 'u', flat: '7', sharp: '8' },\n    { natural: 'i', flat: '8', sharp: '9' },\n    { natural: 'o', flat: '9', sharp: '0' },\n    { natural: 'p', flat: '0', sharp: '-' },\n    { natural: '[', flat: '-', sharp: '=' },\n  ],\n};\n"]},"metadata":{},"sourceType":"module"}